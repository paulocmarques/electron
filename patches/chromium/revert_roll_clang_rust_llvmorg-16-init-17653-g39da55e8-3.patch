From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Charles Kerr <charles@charleskerr.com>
Date: Wed, 8 Mar 2023 14:10:53 -0600
Subject: Revert "Roll clang+rust llvmorg-16-init-17653-g39da55e8-3 :
 llvmorg-17-init-2082-g6d4a674a-1 / [skipping Rust]"

This reverts commit eb840ac593ad7af941acf510ea6ce84c48bde748.

diff --git a/build/toolchain/toolchain.gni b/build/toolchain/toolchain.gni
index 7ddeb126840f554955f6339a54756e21382d5a7d..c9558ee8b59f2824df9f4f103099a9d360735919 100644
--- a/build/toolchain/toolchain.gni
+++ b/build/toolchain/toolchain.gni
@@ -38,7 +38,12 @@ if (generate_linker_map) {
 }
 
 declare_args() {
-  clang_version = "17"
+  if (llvm_force_head_revision) {
+    clang_version = "17"
+  } else {
+    # TODO(crbug.com/1410101): Remove in next Clang roll.
+    clang_version = "16"
+  }
 }
 
 # Extension for shared library files (including leading dot).
diff --git a/tools/clang/scripts/build.py b/tools/clang/scripts/build.py
index 2dc93235a96d610b0bdfa9cad2c4be36df18b96f..392eb396c124a2e4179522d3f8d08ad0bbd6df6d 100755
--- a/tools/clang/scripts/build.py
+++ b/tools/clang/scripts/build.py
@@ -595,6 +595,15 @@ def main():
 
   global CLANG_REVISION, PACKAGE_VERSION, LLVM_BUILD_DIR
 
+  # TODO(crbug.com/1410101): Remove in next Clang roll.
+  if args.llvm_force_head_revision:
+    global RELEASE_VERSION
+    RELEASE_VERSION = '17'
+    old_lib_dir = os.path.join(LLVM_BUILD_DIR, 'lib', 'clang', '16.0.0')
+    if (os.path.isdir(old_lib_dir)):
+      print('Removing old lib dir: ', old_lib_dir)
+      RmTree(old_lib_dir)
+
   if (args.pgo or args.thinlto) and not args.bootstrap:
     print('--pgo/--thinlto requires --bootstrap')
     return 1
diff --git a/tools/clang/scripts/update.py b/tools/clang/scripts/update.py
index eb513199556f9f13819fb4e20617182195f3e748..34ea16b0401205397d8bc78a3ef8f1d6fc573b67 100755
--- a/tools/clang/scripts/update.py
+++ b/tools/clang/scripts/update.py
@@ -35,11 +35,12 @@ import zlib
 # https://chromium.googlesource.com/chromium/src/+/main/docs/updating_clang.md
 # Reverting problematic clang rolls is safe, though.
 # This is the output of `git describe` and is usable as a commit-ish.
-CLANG_REVISION = 'llvmorg-17-init-4759-g547e3456'
-CLANG_SUB_REVISION = 1
+CLANG_REVISION = 'llvmorg-16-init-17653-g39da55e8'
+CLANG_SUB_REVISION = 3
 
 PACKAGE_VERSION = '%s-%s' % (CLANG_REVISION, CLANG_SUB_REVISION)
-RELEASE_VERSION = '17'
+RELEASE_VERSION = '16'
+# TODO(crbug.com/1410101): Bump to 17 in next Clang roll.
 
 CDS_URL = os.environ.get('CDS_CLANG_BUCKET_OVERRIDE',
     'https://commondatastorage.googleapis.com/chromium-browser-clang')
@@ -332,6 +333,11 @@ def main():
                       help='Verify that clang has the passed-in version.')
   args = parser.parse_args()
 
+  # TODO(crbug.com/1410101): Remove in next Clang roll.
+  if args.llvm_force_head_revision:
+    global RELEASE_VERSION
+    RELEASE_VERSION = '17'
+
   if args.verify_version and args.verify_version != RELEASE_VERSION:
     print('RELEASE_VERSION is %s but --verify-version argument was %s.' % (
         RELEASE_VERSION, args.verify_version))
