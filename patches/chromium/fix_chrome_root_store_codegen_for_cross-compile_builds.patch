From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Hubert Chao <hchao@chromium.org>
Date: Tue, 31 Aug 2021 23:20:50 +0000
Subject: Fix chrome root store codegen for cross-compile builds.

Assuming that the textproto file was underneath base::DIR_SOURCE_ROOT
didn't work for cross-compile builds, so change the build system to
pass the absolute path to the root_store_dir.

Bug: 1244436
Change-Id: I06bd6e5729f23e725bfca0c8f0195fcc89d70ba1
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3133701
Commit-Queue: Hubert Chao <hchao@chromium.org>
Reviewed-by: David Benjamin <davidben@chromium.org>
Cr-Commit-Position: refs/heads/main@{#917023}

diff --git a/net/data/ssl/chrome_root_store/BUILD.gn b/net/data/ssl/chrome_root_store/BUILD.gn
index 185d53ec0555fe37be208be488ec1626f1d220ac..92ad13431a3addafdc210cd79501c754a539c38d 100644
--- a/net/data/ssl/chrome_root_store/BUILD.gn
+++ b/net/data/ssl/chrome_root_store/BUILD.gn
@@ -135,9 +135,11 @@ compiled_action("gen_root_store_inc") {
     "store/certs/fd73dad31c644ff1b43bef0ccdda96710b9cd9875eca7e31707af3e96d522bbd.pem",
   ]
   outputs = [ "${target_gen_dir}/chrome-root-store-inc.cc" ]
-  args = [ "--write-cpp=" +
-           rebase_path("${target_gen_dir}/chrome-root-store-inc.cc",
-                       root_build_dir) ]
+  args = [
+    "--root-store-dir=" + rebase_path("//net/data/ssl/chrome_root_store/store"),
+    "--write-cpp=" + rebase_path("${target_gen_dir}/chrome-root-store-inc.cc",
+                                 root_build_dir),
+  ]
 }
 
 compiled_action("gen_root_store_test_inc") {
@@ -153,7 +155,8 @@ compiled_action("gen_root_store_test_inc") {
   ]
   outputs = [ "${target_gen_dir}/chrome-root-store-test-data-inc.cc" ]
   args = [
-    "--root-store-dir=net/data/ssl/chrome_root_store/testdata",
+    "--root-store-dir=" +
+        rebase_path("//net/data/ssl/chrome_root_store/testdata"),
     "--write-cpp=" +
         rebase_path("${target_gen_dir}/chrome-root-store-test-data-inc.cc",
                     root_build_dir),
diff --git a/net/tools/root_store_tool/root_store_tool.cc b/net/tools/root_store_tool/root_store_tool.cc
index a41379e7a6f83fd2f14e63955337c3fc0ef9f7f3..b16344d9999ed07954f57a88409edc0c69c4e918 100644
--- a/net/tools/root_store_tool/root_store_tool.cc
+++ b/net/tools/root_store_tool/root_store_tool.cc
@@ -123,37 +123,29 @@ int main(int argc, char** argv) {
   base::CommandLine& command_line = *base::CommandLine::ForCurrentProcess();
   base::FilePath proto_path = command_line.GetSwitchValuePath("write-proto");
   base::FilePath cpp_path = command_line.GetSwitchValuePath("write-cpp");
-  if ((proto_path.empty() && cpp_path.empty()) ||
-      command_line.HasSwitch("help")) {
-    std::cerr << "Usage: root_store_tool "
-              << "[--root-store-dir=<relative-path>] "
-              << "[--write-proto=PROTO_FILE] "
-              << "[--write-cpp=CPP_FILE]" << std::endl;
-    return 1;
-  }
-
-  // Find root store directory. Assumptions:
-  //  - Root store directory is relative to base::DIR_SOURCE_ROOT
-  //
+  // Get root store directory. Assumptions:
   //  - $(ROOT_STORE_DIR)/root_store.textproto contains the textproto definition
   //    of the root store
   //
   //  - Any certificate files referenced in
   //    $(ROOT_STORE_DIR)/root_store.textproto exist in the
   //    $(ROOT_STORE_DIR)/certs/ subdirectory.
+  //
+  // We'd like to assume that Root store directory is relative to
+  // base::DIR_SOURCE_ROOT, but in cross-compile cases this gives the wrong
+  // result leading to broken builds. See https://crbug.com/1244436.
   base::FilePath root_store_dir =
       command_line.GetSwitchValuePath("root-store-dir");
-  base::FilePath source_root;
-  CHECK(base::PathService::Get(base::DIR_SOURCE_ROOT, &source_root));
-  if (root_store_dir.empty()) {
-    root_store_dir = source_root.AppendASCII("net")
-                         .AppendASCII("data")
-                         .AppendASCII("ssl")
-                         .AppendASCII("chrome_root_store")
-                         .AppendASCII("store");
-  } else {
-    root_store_dir = source_root.Append(root_store_dir);
+
+  if ((proto_path.empty() && cpp_path.empty()) || root_store_dir.empty() ||
+      command_line.HasSwitch("help")) {
+    std::cerr << "Usage: root_store_tool "
+              << "--root-store-dir=<path> "
+              << "[--write-proto=PROTO_FILE] "
+              << "[--write-cpp=CPP_FILE]" << std::endl;
+    return 1;
   }
+
   absl::optional<RootStore> root_store = ReadTextRootStore(root_store_dir);
   if (!root_store) {
     return 1;
