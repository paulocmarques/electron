From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Samuel Attard <samuel.r.attard@gmail.com>
Date: Thu, 2 Sep 2021 22:55:25 +0000
Subject: Revert "Remove warning about unknown abstract origin"

This reverts commit 7933ec0a69bac134b7cee4b60a5dc80743b2b1a9.

diff --git a/src/common/dwarf_cu_to_module.cc b/src/common/dwarf_cu_to_module.cc
index dacc9cbe4b0e13d19b5969fe91ba7a867e64a36c..c51514b7575c2e961aaae3ff883be00d80e3ec15 100644
--- a/src/common/dwarf_cu_to_module.cc
+++ b/src/common/dwarf_cu_to_module.cc
@@ -504,6 +504,8 @@ void DwarfCUToModule::GenericDIEHandler::ProcessAttributeReference(
         abstract_origin_ = &(origin->second);
       } else if (data > offset_) {
         forward_ref_die_offset_ = data;
+      } else {
+        cu_context_->reporter->UnknownAbstractOrigin(offset_, data);
       }
       specification_offset_ = data;
       break;
@@ -748,6 +750,14 @@ void DwarfCUToModule::InlineHandler::Finish() {
     }
   }
 
+  // Malformed DWARF may omit the name, but all Module::Functions must
+  // have names.
+  // If we have a forward reference to a DW_AT_specification or
+  // DW_AT_abstract_origin, then don't warn, the name will be fixed up
+  // later
+  if (name_.empty() && forward_ref_die_offset_ == 0)
+    cu_context_->reporter->UnnamedFunction(offset_);
+
   // Every DW_TAG_inlined_subroutine should have a DW_AT_abstract_origin.
   assert(specification_offset_ != 0);
 
@@ -919,6 +929,11 @@ void DwarfCUToModule::FuncHandler::Finish() {
     if (!name_.empty()) {
       name = name_;
     } else {
+      // If we have a forward reference to a DW_AT_specification or
+      // DW_AT_abstract_origin, then don't warn, the name will be fixed up
+      // later
+      if (forward_ref_die_offset_ == 0)
+        cu_context_->reporter->UnnamedFunction(offset_);
       name = "<name omitted>";
     }
 
